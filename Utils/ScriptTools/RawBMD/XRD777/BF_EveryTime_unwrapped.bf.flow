
// 
// FlowScript decompiled using Atlus Script Tools by TGE (2017-2021)
// In the unfortunate case of any bugs, please report them back to me.
// 


// 
// Procedure declarations
// 

// Procedure Index: 0
void MAIN_EvreyTime()
{
    
    if ( GET_TIME() == 0 )
    {
        EveryMoning();
    }
    else if ( GET_TIME() == 1 )
    {
        EveryAM();
    }
    else if ( ( GET_TIME() == 3 ) && BIT_CHK( ( 24 + 0x40000000 ) ) )
    {
        EveryDaytime();
    }
    else if ( GET_TIME() == 4 )
    {
        EveryDaytime();
    }
    else if ( GET_TIME() == 5 )
    {
        EveryNight();
    }
    else if ( GET_TIME() == 7 )
    {
        EveryMidnight();
    }

    BIT_OFF( ( 1229 + 0x20000000 ) );
    BIT_OFF( ( 663 + 0x20000000 ) );
    
    if ( ( BIT_CHK( ( 690 + 0x10000000 ) ) == 1 ) && ( BIT_CHK( ( 691 + 0x10000000 ) ) == 0 ) )
    {
        
        if ( CHK_TIME( 4 ) == 0 )
        {
            BIT_ON( ( 336 + 0x20000000 ) );
        }
        else 
        {
            BIT_OFF( ( 336 + 0x20000000 ) );
        }

    }

}


// Procedure Index: 1
void EveryMoning()
{
    
    if ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( CHK_DAY( 5, 23 ) == 1 ) || ( CHK_DAY( 6, 15 ) == 1 ) ) || ( CHK_DAY( 6, 22 ) == 1 ) ) || ( CHK_DAY( 6, 24 ) == 1 ) ) || ( CHK_DAY( 6, 29 ) == 1 ) ) || ( CHK_DAY( 7, 1 ) == 1 ) ) || ( CHK_DAY( 7, 4 ) == 1 ) ) || ( CHK_DAY( 7, 6 ) == 1 ) ) || ( CHK_DAY( 7, 7 ) == 1 ) ) || ( CHK_DAY( 7, 11 ) == 1 ) ) || ( CHK_DAY( 8, 15 ) == 1 ) ) || ( CHK_DAY( 9, 3 ) == 1 ) ) || ( CHK_DAY( 9, 4 ) == 1 ) ) || ( CHK_DAY( 9, 5 ) == 1 ) ) || ( CHK_DAY( 9, 7 ) == 1 ) ) || ( CHK_DAY( 9, 9 ) == 1 ) ) || ( CHK_DAY( 9, 11 ) == 1 ) ) || ( CHK_DAY( 10, 3 ) == 1 ) ) || ( CHK_DAY( 10, 9 ) == 1 ) ) || ( CHK_DAY( 10, 31 ) == 1 ) ) || ( CHK_DAY( 11, 2 ) == 1 ) ) || ( CHK_DAY( 11, 10 ) == 1 ) ) || ( CHK_DAY( 12, 2 ) == 1 ) ) || ( CHK_DAY( 12, 7 ) == 1 ) ) || ( CHK_DAY( 12, 8 ) == 1 ) ) || ( CHK_DAY( 12, 9 ) == 1 ) ) || ( CHK_DAY( 12, 10 ) == 1 ) )
    {
        BIT_OFF( ( 89 + 0x40000000 ) );
        BIT_OFF( ( 90 + 0x40000000 ) );
        BIT_OFF( ( 91 + 0x40000000 ) );
        BIT_ON( ( 92 + 0x40000000 ) );
    }

    
    if ( BIT_CHK( ( 25 + 0x40000000 ) ) == 1 )
    {
        BIT_ON( ( 177 + 0 ) );
    }
    else 
    {
        BIT_OFF( ( 177 + 0 ) );
    }

    
    if ( ( ( ( CHK_DAYS_STARTEND( 5, 11, 5, 22 ) == 1 ) || ( CHK_DAYS_STARTEND( 7, 7, 7, 17 ) == 1 ) ) || ( CHK_DAYS_STARTEND( 10, 5, 10, 0x10 ) == 1 ) ) || ( CHK_DAYS_STARTEND( 12, 7, 12, 18 ) == 1 ) )
    {
        BIT_ON( ( 166 + 0 ) );
    }
    else 
    {
        BIT_OFF( ( 166 + 0 ) );
    }

    
    if ( CHK_DAYS_STARTEND( 5, 12, 5, 12 ) )
    {
        BIT_OFF( ( 361 + 0x10000000 ) );
    }

}


// Procedure Index: 2
void EveryAM()
{
    
    if ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( CHK_DAY( 5, 23 ) == 1 ) || ( CHK_DAY( 6, 15 ) == 1 ) ) || ( CHK_DAY( 6, 22 ) == 1 ) ) || ( CHK_DAY( 6, 24 ) == 1 ) ) || ( CHK_DAY( 6, 29 ) == 1 ) ) || ( CHK_DAY( 7, 1 ) == 1 ) ) || ( CHK_DAY( 7, 4 ) == 1 ) ) || ( CHK_DAY( 7, 6 ) == 1 ) ) || ( CHK_DAY( 7, 7 ) == 1 ) ) || ( CHK_DAY( 7, 11 ) == 1 ) ) || ( CHK_DAY( 8, 15 ) == 1 ) ) || ( CHK_DAY( 9, 3 ) == 1 ) ) || ( CHK_DAY( 9, 4 ) == 1 ) ) || ( CHK_DAY( 9, 5 ) == 1 ) ) || ( CHK_DAY( 9, 7 ) == 1 ) ) || ( CHK_DAY( 9, 9 ) == 1 ) ) || ( CHK_DAY( 9, 11 ) == 1 ) ) || ( CHK_DAY( 10, 3 ) == 1 ) ) || ( CHK_DAY( 10, 9 ) == 1 ) ) || ( CHK_DAY( 10, 31 ) == 1 ) ) || ( CHK_DAY( 11, 2 ) == 1 ) ) || ( CHK_DAY( 11, 10 ) == 1 ) ) || ( CHK_DAY( 12, 2 ) == 1 ) ) || ( CHK_DAY( 12, 7 ) == 1 ) ) || ( CHK_DAY( 12, 8 ) == 1 ) ) || ( CHK_DAY( 12, 9 ) == 1 ) ) || ( CHK_DAY( 12, 10 ) == 1 ) )
    {
        BIT_OFF( ( 92 + 0x40000000 ) );
        
        if ( CHK_DAYS_STARTEND( 4, 6, 8, 31 ) == 1 )
        {
            BIT_ON( ( 89 + 0x40000000 ) );
        }
        else if ( CHK_DAYS_STARTEND( 9, 1, 1, 7 ) == 1 )
        {
            BIT_ON( ( 90 + 0x40000000 ) );
        }
        else if ( CHK_DAYS_STARTEND( 1, 8, 3, 4 ) == 1 )
        {
            BIT_ON( ( 91 + 0x40000000 ) );
        }

    }

}


// Procedure Index: 3
void EveryPM()
{
}


// Procedure Index: 4
void EveryDaytime()
{
    
    if ( ( GET_TIME() == 4 ) && ( BIT_CHK( ( 25 + 0x40000000 ) ) == 1 ) )
    {
        BIT_ON( ( 177 + 0 ) );
    }

    NpcQuestFlgSetting();
    SetElizabethIcon();
    RECEIVE_MAIL_CONDITIONAL();
    
    if ( BIT_CHK( ( 361 + 0x10000000 ) ) == 0 )
    {
        BIT_ON( ( 361 + 0x10000000 ) );
    }

}


// Procedure Index: 5
void EveryNight()
{
    RECOVERY_ALL();
    
    if ( CHK_DAY( 5, 10 ) == 1 )
    {
        BIT_ON( ( 74 + 0 ) );
    }
    else if ( CHK_DAY( 6, 21 ) == 1 )
    {
        BIT_ON( ( 76 + 0 ) );
    }
    else if ( CHK_DAY( 7, 24 ) == 1 )
    {
        BIT_ON( ( 78 + 0 ) );
    }
    else if ( CHK_DAY( 8, 18 ) == 1 )
    {
        BIT_ON( ( 80 + 0 ) );
    }
    else if ( CHK_DAY( 9, 13 ) == 1 )
    {
        BIT_ON( ( 82 + 0 ) );
    }
    else if ( CHK_DAY( 9, 21 ) == 1 )
    {
        BIT_ON( ( 84 + 0 ) );
    }
    else if ( CHK_DAY( 9, 27 ) == 1 )
    {
        BIT_ON( ( 86 + 0 ) );
    }
    else if ( CHK_DAY( 10, 18 ) == 1 )
    {
        BIT_ON( ( 88 + 0 ) );
    }
    else if ( CHK_DAY( 11, 15 ) == 1 )
    {
        BIT_ON( ( 90 + 0 ) );
    }
    else if ( CHK_DAY( 1, 17 ) == 1 )
    {
        BIT_ON( ( 92 + 0 ) );
    }

    
    if ( BIT_CHK( ( 25 + 0x40000000 ) ) == 1 )
    {
        BIT_ON( ( 177 + 0 ) );
    }
    else 
    {
        BIT_OFF( ( 177 + 0 ) );
    }

    
    if ( BIT_CHK( ( 52 + 0x40000000 ) ) == 0 )
    {
        BIT_ON( ( 571 + 0x20000000 ) );
    }

    
    if ( ( ( BIT_CHK( ( 28 + 0x20000000 ) ) == 1 ) || ( BIT_CHK( ( 69 + 0x20000000 ) ) == 1 ) ) || ( BIT_CHK( ( 670 + 0x20000000 ) ) == 1 ) )
    {
        BIT_ON( ( 638 + 0x20000000 ) );
    }

    
    if ( ( ( BIT_CHK( ( 30 + 0x20000000 ) ) == 1 ) || ( BIT_CHK( ( 51 + 0x20000000 ) ) == 1 ) ) || ( BIT_CHK( ( 52 + 0x20000000 ) ) == 1 ) )
    {
        BIT_ON( ( 639 + 0x20000000 ) );
    }

    SetElizabethIcon();
    Theurgia_Point_Setting();
    NpcQuestFlgSetting();
    RESET_MAIL_BOX();
    RECEIVE_MAIL_CONDITIONAL();
}


// Procedure Index: 6
void EveryMidnight()
{
    RESET_MAIL_BOX();
    
    if ( ( ( ( ( ( ( ( ( ( CHK_DAY( 5, 9 ) == 1 ) || ( CHK_DAY( 6, 8 ) == 1 ) ) || ( CHK_DAY( 7, 7 ) == 1 ) ) || ( CHK_DAY( 8, 6 ) == 1 ) ) || ( CHK_DAY( 9, 5 ) == 1 ) ) || ( CHK_DAY( 10, 4 ) == 1 ) ) || ( CHK_DAY( 11, 3 ) == 1 ) ) || ( CHK_DAY( 12, 2 ) == 1 ) ) || ( CHK_DAY( 12, 31 ) == 1 ) ) || ( CHK_DAY( 1, 31 ) == 1 ) )
    {
        SET_COUNT( ( 351 + 0 ), 0 );
    }

    BIT_OFF( ( 218 + 0 ) );
    BIT_OFF( ( 638 + 0x20000000 ) );
    BIT_OFF( ( 639 + 0x20000000 ) );
}


// Procedure Index: 7
void Theurgia_Point_Setting()
{
    int var0;
    int var1;
    int var2;
    int var3;
    int var4;
    int var5;
    int var6;
    int var7;
    int var8;
    int var9;
    int var10;
    int var11;
    int var12;
    int var13;
    int var14;
    int var15;
    int var16;
    int var17;
    int var18;
    int var19;
    int var20;
    int var21;
    int var22;
    int var23;
    int var24;
    int var25;
    int var26;
    
    if ( BIT_CHK( ( 4 + 805306368 ) ) == 0 )
    {
        return;
    }

    var0 = GET_TP( 1 );
    var1 = GET_TP( 2 );
    var2 = GET_TP( 3 );
    var3 = GET_TP( 4 );
    var4 = GET_TP( 5 );
    var5 = GET_TP( 6 );
    var6 = GET_TP( 7 );
    var7 = GET_TP( 8 );
    var8 = GET_TP( 9 );
    var9 = GET_TP( 10 );
    var10 = 0;
    var11 = 0;
    var12 = 0;
    var13 = 0;
    var14 = 0;
    var15 = 0;
    var16 = 0;
    var17 = 0;
    var18 = 0;
    var19 = 0;
    var20 = 0;
    
    if ( CHK_DAY( 7, 7 ) == 1 )
    {
        var10 = 200;
        var11 = 600;
        var12 = 400;
        var13 = 200;
        var14 = 400;
        var15 = 200;
        var16 = 0;
        var17 = 0;
        var18 = 0;
        var19 = 0;
        var20 = 1;
    }
    else if ( CHK_DAY( 8, 6 ) == 1 )
    {
        var10 = 100;
        var11 = 200;
        var12 = 300;
        var13 = 400;
        var14 = 300;
        var15 = 200;
        var16 = 500;
        var17 = 200;
        var18 = 200;
        var19 = 200;
        var20 = 1;
    }
    else if ( CHK_DAY( 9, 5 ) == 1 )
    {
        var10 = 50;
        var11 = 80;
        var12 = 80;
        var13 = 80;
        var14 = 80;
        var15 = 80;
        var16 = 80;
        var17 = 250;
        var18 = 80;
        var19 = 100;
        var20 = 1;
    }
    else if ( CHK_DAY( 10, 4 ) == 1 )
    {
        var10 = 50;
        var11 = 200;
        var12 = 200;
        var13 = 400;
        var14 = 200;
        var15 = 200;
        var16 = 200;
        var17 = 200;
        var18 = 600;
        var19 = 200;
        var20 = 1;
    }
    else if ( CHK_DAY( 11, 3 ) == 1 )
    {
        var10 = 100;
        var11 = 200;
        var12 = 200;
        var13 = 200;
        var14 = 200;
        var15 = 200;
        var16 = 200;
        var17 = 200;
        var18 = 200;
        var19 = 200;
        var20 = 1;
    }
    else if ( CHK_DAY( 1, 31 ) == 1 )
    {
        var10 = 100;
        var11 = 100;
        var12 = 100;
        var13 = 100;
        var14 = 100;
        var15 = 100;
        var16 = 100;
        var17 = 100;
        var18 = 100;
        var19 = 100;
        var20 = 1;
    }

    
    if ( var20 == 1 )
    {
        SET_TP( 1, ( var0 + var10 ) );
        SET_TP( 2, ( var1 + var11 ) );
        SET_TP( 3, ( var2 + var12 ) );
        SET_TP( 4, ( var3 + var13 ) );
        SET_TP( 5, ( var4 + var14 ) );
        SET_TP( 6, ( var5 + var15 ) );
        SET_TP( 7, ( var6 + var16 ) );
        SET_TP( 8, ( var7 + var17 ) );
        SET_TP( 9, ( var8 + var18 ) );
        SET_TP( 10, ( var9 + var19 ) );
        return;
    }

    var21 = CHK_DAYS_STARTEND( 7, 7, 7, 17 );
    var22 = CHK_DAYS_STARTEND( 10, 5, 10, 0x10 );
    var23 = CHK_DAYS_STARTEND( 12, 7, 12, 18 );
    var24 = CHK_DAYS_STARTEND( 7, 26, 8, 31 );
    var25 = CHK_DAYS_STARTEND( 12, 27, 1, 7 );
    var10 = 100;
    
    if ( CHK_DAY( 6, 14 ) == 1 )
    {
        var12 = 300;
    }
    else if ( CHK_DAYS_STARTEND( 7, 26, 8, 30 ) || ( CHK_DAYS_STARTEND( 12, 26, 1, 6 ) == 1 ) )
    {
        var12 = 350;
    }
    else if ( CHK_DAYOFWEEK( 6 ) == 1 )
    {
        var12 = 600;
    }
    else if ( ( CHK_DAY( 8, 31 ) == 1 ) || ( CHK_DAY( 1, 7 ) == 1 ) )
    {
        var12 = 0;
    }
    else 
    {
        var12 = 50;
    }

    
    if ( CHK_DAY( 7, 24 ) == 1 )
    {
        var11 = 50;
    }
    else if ( ( ( var21 == 1 ) || ( var22 == 1 ) ) || ( var23 == 1 ) )
    {
        var11 = 0;
    }
    else if ( ( var24 == 1 ) || ( var25 == 1 ) )
    {
        var11 = 200;
    }
    else if ( ( CHK_DAYOFWEEK( 2 ) == 1 ) || ( CHK_DAYOFWEEK( 5 ) == 1 ) )
    {
        var11 = 500;
    }
    else 
    {
        var11 = 100;
    }

    
    if ( CHK_DAY( 6, 14 ) == 1 )
    {
        var13 = 300;
    }
    else if ( CHK_DAY( 7, 24 ) == 1 )
    {
        var13 = 300;
    }
    else if ( ( ( var21 == 1 ) || ( var22 == 1 ) ) || ( var23 == 1 ) )
    {
        var13 = 0;
    }
    else if ( ( var24 == 1 ) || ( var25 == 1 ) )
    {
        var13 = 200;
    }
    else if ( ( ( ( CHK_DAYOFWEEK( 2 ) == 1 ) || ( CHK_DAYOFWEEK( 3 ) == 1 ) ) || ( CHK_DAYOFWEEK( 4 ) == 1 ) ) || ( CHK_DAYOFWEEK( 6 ) == 1 ) )
    {
        var13 = 450;
    }
    else 
    {
        var13 = 100;
    }

    
    if ( CHK_DAY( 6, 14 ) == 1 )
    {
        var14 = 400;
    }
    else if ( CHK_DAY( 7, 24 ) == 1 )
    {
        var14 = 100;
    }
    else if ( ( ( var21 == 1 ) || ( var22 == 1 ) ) || ( var23 == 1 ) )
    {
        var14 = 0;
    }
    else if ( ( var24 == 1 ) || ( var25 == 1 ) )
    {
        var14 = 200;
    }
    else if ( ( ( CHK_DAYOFWEEK( 1 ) == 1 ) || CHK_DAYOFWEEK( 3 ) ) || ( CHK_DAYOFWEEK( 5 ) == 1 ) )
    {
        var14 = 500;
    }
    else 
    {
        var14 = 100;
    }

    
    if ( ( ( var21 == 1 ) || ( var22 == 1 ) ) || ( var23 == 1 ) )
    {
        var15 = 0;
    }
    else if ( ( var24 == 1 ) || ( var25 == 1 ) )
    {
        var15 = 200;
    }
    else if ( ( ( CHK_DAYOFWEEK( 2 ) == 1 ) || CHK_DAYOFWEEK( 3 ) ) || ( CHK_DAYOFWEEK( 4 ) == 1 ) )
    {
        var15 = 400;
    }
    else 
    {
        var15 = 100;
    }

    
    if ( CHK_DAY( 7, 24 ) == 1 )
    {
        var16 = 500;
    }
    else if ( CHK_DAYS_STARTEND( 1, 1, 1, 31 ) == 1 )
    {
        var16 = 400;
    }
    else 
    {
        var16 = 100;
    }

    
    if ( ( CHK_DAY( 8, 28 ) == 1 ) || ( CHK_DAY( 9, 10 ) == 1 ) )
    {
        var17 = 600;
    }
    else if ( CHK_DAYOFWEEK( 0 ) == 1 )
    {
        var17 = 500;
    }
    else if ( CHK_DAYOFWEEK( 6 ) == 1 )
    {
        var17 = 300;
    }
    else if ( ( var24 == 1 ) || ( var25 == 1 ) )
    {
        var17 = 200;
    }
    else 
    {
        var17 = 100;
    }

    
    if ( CHK_DAY( 8, 8 ) == 1 )
    {
        var18 = 500;
    }
    else if ( CHK_DAYOFWEEK( 0 ) == 1 )
    {
        var18 = 500;
    }
    else 
    {
        var18 = 100;
    }

    var26 = 0;
    var26 = RND( 200 );
    
    if ( ( CHK_DAY( 9, 3 ) == 1 ) || ( CHK_DAY( 9, 10 ) == 1 ) )
    {
        var19 = 600;
    }
    else if ( ( CHK_DAYS_STARTEND( 9, 4, 9, 9 ) == 1 ) || ( CHK_DAYS_STARTEND( 9, 11, 10, 4 ) == 1 ) )
    {
        var19 = ( var26 + 300 );
    }
    else 
    {
        var19 = 50;
    }

    SET_TP( 1, ( var0 + var10 ) );
    SET_TP( 2, ( var1 + var11 ) );
    SET_TP( 3, ( var2 + var12 ) );
    SET_TP( 4, ( var3 + var13 ) );
    SET_TP( 5, ( var4 + var14 ) );
    SET_TP( 6, ( var5 + var15 ) );
    SET_TP( 7, ( var6 + var16 ) );
    SET_TP( 8, ( var7 + var17 ) );
    SET_TP( 9, ( var8 + var18 ) );
    SET_TP( 10, ( var9 + var19 ) );
}


// Procedure Index: 8
void NpcQuestFlgSetting()
{
    
    if ( ( BIT_CHK( ( 3110 + 0x20000000 ) ) == 1 ) && ( BIT_CHK( ( 3111 + 0x20000000 ) ) == 0 ) )
    {
        
        if ( GET_ITEM_NUM( ( 0x4000 + 115 ) ) == 0 )
        {
            BIT_ON( ( 2209 + 0x20000000 ) );
        }
        else 
        {
            BIT_OFF( ( 2209 + 0x20000000 ) );
        }

    }
    else 
    {
        BIT_OFF( ( 2209 + 0x20000000 ) );
    }

    
    if ( ( BIT_CHK( ( 3112 + 0x20000000 ) ) == 1 ) && ( BIT_CHK( ( 3113 + 0x20000000 ) ) == 0 ) )
    {
        
        if ( GET_TIME() != 5 )
        {
            BIT_OFF( ( 2144 + 0x20000000 ) );
        }
        else if ( ( BIT_CHK( ( 90 + 0x20000000 ) ) == 1 ) || ( BIT_CHK( ( 3466 + 0x20000000 ) ) == 1 ) )
        {
            BIT_OFF( ( 2144 + 0x20000000 ) );
        }
        else 
        {
            BIT_ON( ( 2144 + 0x20000000 ) );
        }

    }
    else 
    {
        BIT_OFF( ( 2144 + 0x20000000 ) );
    }

    
    if ( ( BIT_CHK( ( 3114 + 0x20000000 ) ) == 1 ) && ( BIT_CHK( ( 3115 + 0x20000000 ) ) == 0 ) )
    {
        
        if ( ( BIT_CHK( ( 3467 + 0x20000000 ) ) == 1 ) && ( GET_ITEM_NUM( ( 0x2000 + 21 ) ) == 0 ) )
        {
            BIT_ON( ( 2210 + 0x20000000 ) );
        }
        else 
        {
            BIT_OFF( ( 2210 + 0x20000000 ) );
        }

    }
    else 
    {
        BIT_OFF( ( 2210 + 0x20000000 ) );
    }

    BIT_OFF( ( 2146 + 0x20000000 ) );
    
    if ( ( BIT_CHK( ( 3118 + 0x20000000 ) ) == 1 ) && ( BIT_CHK( ( 3119 + 0x20000000 ) ) == 0 ) )
    {
        
        if ( ( BIT_CHK( ( 231 + 0 ) ) == 0 ) && ( GET_ITEM_NUM( ( 0x4000 + 369 ) ) < 1 ) )
        {
            
            if ( GET_TIME() == 5 )
            {
                BIT_ON( ( 2147 + 0x20000000 ) );
            }
            else 
            {
                BIT_OFF( ( 2147 + 0x20000000 ) );
            }

        }
        else if ( ( ( BIT_CHK( ( 231 + 0 ) ) == 1 ) && ( BIT_CHK( ( 3469 + 0x20000000 ) ) == 0 ) ) && ( GET_ITEM_NUM( ( 0x4000 + 315 ) ) < 1 ) )
        {
            BIT_OFF( ( 2147 + 0x20000000 ) );
            BIT_ON( ( 2049 + 0x20000000 ) );
        }

    }
    else 
    {
        BIT_OFF( ( 2049 + 0x20000000 ) );
        BIT_OFF( ( 2147 + 0x20000000 ) );
    }

    
    if ( ( BIT_CHK( ( 3122 + 0x20000000 ) ) == 1 ) && ( BIT_CHK( ( 3123 + 0x20000000 ) ) == 0 ) )
    {
        
        if ( ( GET_ITEM_NUM( ( 0x4000 + 274 ) ) == 0 ) && ( BIT_CHK( ( 62 + 0 ) ) == 0 ) )
        {
            BIT_ON( ( 2213 + 0x20000000 ) );
        }

        
        if ( ( GET_ITEM_NUM( ( 0x4000 + 274 ) ) >= 1 ) || ( BIT_CHK( ( 62 + 0 ) ) == 1 ) )
        {
            BIT_OFF( ( 2213 + 0x20000000 ) );
        }

    }
    else 
    {
        BIT_OFF( ( 2213 + 0x20000000 ) );
    }

    
    if ( ( BIT_CHK( ( 3130 + 0x20000000 ) ) == 1 ) && ( BIT_CHK( ( 3131 + 0x20000000 ) ) == 0 ) )
    {
        
        if ( GET_TIME() != 5 )
        {
            BIT_OFF( ( 2145 + 0x20000000 ) );
        }
        else if ( GET_ITEM_NUM( ( 20480 + 160 ) ) == 0 )
        {
            BIT_ON( ( 2145 + 0x20000000 ) );
        }
        else 
        {
            BIT_OFF( ( 2145 + 0x20000000 ) );
        }

    }
    else 
    {
        BIT_OFF( ( 2145 + 0x20000000 ) );
    }

    
    if ( CHK_DAYS_STARTEND( 7, 6, 1, 31 ) )
    {
        BIT_OFF( ( 2145 + 0x20000000 ) );
    }

    
    if ( ( BIT_CHK( ( 3136 + 0x20000000 ) ) == 1 ) && ( BIT_CHK( ( 3137 + 0x20000000 ) ) == 0 ) )
    {
        
        if ( BIT_CHK( ( 3478 + 0x20000000 ) ) == 0 )
        {
            BIT_ON( ( 2211 + 0x20000000 ) );
        }
        else if ( ( BIT_CHK( ( 3478 + 0x20000000 ) ) == 1 ) && ( BIT_CHK( ( 3479 + 0x20000000 ) ) == 0 ) )
        {
            BIT_OFF( ( 2211 + 0x20000000 ) );
            BIT_ON( ( 2212 + 0x20000000 ) );
        }
        else if ( ( BIT_CHK( ( 3479 + 0x20000000 ) ) == 1 ) && ( BIT_CHK( ( 3480 + 0x20000000 ) ) == 0 ) )
        {
            BIT_OFF( ( 2212 + 0x20000000 ) );
            BIT_ON( ( 2272 + 0x20000000 ) );
        }
        else 
        {
            BIT_OFF( ( 2272 + 0x20000000 ) );
        }

    }
    else 
    {
        BIT_OFF( ( 2211 + 0x20000000 ) );
        BIT_OFF( ( 2212 + 0x20000000 ) );
        BIT_OFF( ( 2272 + 0x20000000 ) );
    }

    
    if ( CHK_DAYS_STARTEND( 9, 4, 1, 31 ) )
    {
        BIT_OFF( ( 2211 + 0x20000000 ) );
        BIT_OFF( ( 2212 + 0x20000000 ) );
        BIT_OFF( ( 2272 + 0x20000000 ) );
    }

    
    if ( ( BIT_CHK( ( 3138 + 0x20000000 ) ) == 1 ) && ( BIT_CHK( ( 3493 + 0x20000000 ) ) == 0 ) )
    {
        BIT_ON( ( 2273 + 0x20000000 ) );
    }
    else 
    {
        BIT_OFF( ( 2273 + 0x20000000 ) );
    }

    
    if ( ( ( BIT_CHK( ( 3194 + 0x20000000 ) ) == 1 ) && ( BIT_CHK( ( 3195 + 0x20000000 ) ) == 0 ) ) && ( GET_ITEM_NUM( ( 20480 + 78 ) ) == 0 ) )
    {
        
        if ( ( ( GET_ITEM_NUM( ( 0x4000 + 54 ) ) > 0 ) || ( GET_ITEM_NUM( ( 0x4000 + 55 ) ) > 0 ) ) || ( GET_ITEM_NUM( ( 0x4000 + 56 ) ) > 0 ) )
        {
            BIT_ON( ( 0x0800 + 0x20000000 ) );
        }
        else 
        {
            BIT_OFF( ( 0x0800 + 0x20000000 ) );
        }

    }
    else 
    {
        BIT_OFF( ( 0x0800 + 0x20000000 ) );
    }

    
    if ( ( ( ( ( BIT_CHK( ( 3196 + 0x20000000 ) ) == 1 ) && ( BIT_CHK( ( 3197 + 0x20000000 ) ) == 0 ) ) && ( GET_ITEM_NUM( ( 20480 + 76 ) ) < 1 ) ) && ( BIT_CHK( ( 29 + 0x20000000 ) ) == 0 ) ) && ( CHK_TIME( 4 ) == 0 ) )
    {
        BIT_ON( ( 2112 + 0x20000000 ) );
    }
    else 
    {
        BIT_OFF( ( 2112 + 0x20000000 ) );
    }

    
    if ( ( ( ( BIT_CHK( ( 3202 + 0x20000000 ) ) == 1 ) && ( BIT_CHK( ( 3203 + 0x20000000 ) ) == 0 ) ) && ( BIT_CHK( ( 253 + 0x20000000 ) ) == 0 ) ) && ( BIT_CHK( ( 235 + 0x20000000 ) ) == 0 ) )
    {
        BIT_ON( ( 2208 + 0x20000000 ) );
    }
    else 
    {
        BIT_OFF( ( 2208 + 0x20000000 ) );
    }

    
    if ( ( ( ( ( ( ( BIT_CHK( ( 3204 + 0x20000000 ) ) == 1 ) && ( BIT_CHK( ( 3205 + 0x20000000 ) ) == 0 ) ) && ( GET_ITEM_NUM( ( 20480 + 74 ) ) < 1 ) ) && ( BIT_CHK( ( 30 + 0x20000000 ) ) == 0 ) ) && ( BIT_CHK( ( 51 + 0x20000000 ) ) == 0 ) ) && ( BIT_CHK( ( 52 + 0x20000000 ) ) == 0 ) ) && ( CHK_TIME( 4 ) == 0 ) )
    {
        BIT_ON( ( 2113 + 0x20000000 ) );
    }
    else 
    {
        BIT_OFF( ( 2113 + 0x20000000 ) );
    }

    
    if ( ( ( ( BIT_CHK( ( 3216 + 0x20000000 ) ) == 1 ) && ( BIT_CHK( ( 3217 + 0x20000000 ) ) == 0 ) ) && ( GET_ITEM_NUM( ( 20480 + 68 ) ) < 1 ) ) && ( CHK_TIME( 4 ) == 0 ) )
    {
        BIT_ON( ( 2114 + 0x20000000 ) );
    }
    else 
    {
        BIT_OFF( ( 2114 + 0x20000000 ) );
    }

    
    if ( ( ( ( ( ( BIT_CHK( ( 3218 + 0x20000000 ) ) == 1 ) && ( BIT_CHK( ( 3219 + 0x20000000 ) ) == 0 ) ) && ( GET_ITEM_NUM( ( 20480 + 72 ) ) < 1 ) ) && ( BIT_CHK( ( 27 + 0x20000000 ) ) == 0 ) ) && ( BIT_CHK( ( 50 + 0x20000000 ) ) == 0 ) ) && ( CHK_TIME( 4 ) == 0 ) )
    {
        BIT_ON( ( 2115 + 0x20000000 ) );
    }
    else 
    {
        BIT_OFF( ( 2115 + 0x20000000 ) );
    }

    
    if ( ( ( ( BIT_CHK( ( 3220 + 0x20000000 ) ) == 1 ) && ( BIT_CHK( ( 3221 + 0x20000000 ) ) == 0 ) ) && ( GET_ITEM_NUM( ( 20480 + 69 ) ) < 1 ) ) && ( CHK_TIME( 4 ) == 0 ) )
    {
        BIT_ON( ( 2116 + 0x20000000 ) );
    }
    else 
    {
        BIT_OFF( ( 2116 + 0x20000000 ) );
    }

    
    if ( ( ( ( ( BIT_CHK( ( 3222 + 0x20000000 ) ) == 1 ) && ( BIT_CHK( ( 3223 + 0x20000000 ) ) == 0 ) ) && ( GET_ITEM_NUM( ( 20480 + 75 ) ) < 1 ) ) && ( BIT_CHK( ( 28 + 0x20000000 ) ) == 0 ) ) && ( CHK_TIME( 4 ) == 0 ) )
    {
        BIT_ON( ( 2117 + 0x20000000 ) );
    }
    else 
    {
        BIT_OFF( ( 2117 + 0x20000000 ) );
    }

    
    if ( ( ( ( BIT_CHK( ( 3224 + 0x20000000 ) ) == 1 ) && ( BIT_CHK( ( 3225 + 0x20000000 ) ) == 0 ) ) && ( GET_ITEM_NUM( ( 20480 + 70 ) ) < 1 ) ) && ( CHK_TIME( 4 ) == 0 ) )
    {
        BIT_ON( ( 2118 + 0x20000000 ) );
    }
    else 
    {
        BIT_OFF( ( 2118 + 0x20000000 ) );
    }

    
    if ( ( ( ( BIT_CHK( ( 3226 + 0x20000000 ) ) == 1 ) && ( BIT_CHK( ( 3227 + 0x20000000 ) ) == 0 ) ) && ( GET_ITEM_NUM( ( 20480 + 71 ) ) < 1 ) ) && ( CHK_TIME( 4 ) == 0 ) )
    {
        BIT_ON( ( 2119 + 0x20000000 ) );
    }
    else 
    {
        BIT_OFF( ( 2119 + 0x20000000 ) );
    }

    
    if ( ( ( ( ( BIT_CHK( ( 3228 + 0x20000000 ) ) == 1 ) && ( BIT_CHK( ( 3229 + 0x20000000 ) ) == 0 ) ) && ( GET_ITEM_NUM( ( 20480 + 73 ) ) < 1 ) ) && ( BIT_CHK( ( 31 + 0x20000000 ) ) == 0 ) ) && ( CHK_TIME( 4 ) == 0 ) )
    {
        BIT_ON( ( 2120 + 0x20000000 ) );
    }
    else 
    {
        BIT_OFF( ( 2120 + 0x20000000 ) );
    }

    
    if ( ( ( ( BIT_CHK( ( 3230 + 0x20000000 ) ) == 1 ) && ( BIT_CHK( ( 3231 + 0x20000000 ) ) == 0 ) ) && ( GET_ITEM_NUM( ( 20480 + 77 ) ) < 1 ) ) && ( CHK_TIME( 4 ) == 0 ) )
    {
        BIT_ON( ( 2121 + 0x20000000 ) );
    }
    else 
    {
        BIT_OFF( ( 2121 + 0x20000000 ) );
    }

}


// Procedure Index: 9
void SetElizabethIcon()
{
    int var27;
    int var29;
    int var28;
    int var30;
    int var31;
    int var33;
    int var32;
    var27 = 0;
    var29 = FLD_GET_MAJOR();
    var28 = GET_TIME();
    var30 = CHECK_NEW_QUEST_EXIST();
    
    if ( var30 > 0 )
    {
        var27 = 1;
    }

    
    if ( ( BIT_CHK( ( 3333 + 0x20000000 ) ) == 1 ) && ( BIT_CHK( ( 3483 + 0x20000000 ) ) == 0 ) )
    {
        
        if ( CHK_DAYS_STARTEND( 1, 31, 1, 31 ) == 1 )
        {
            
            if ( BIT_CHK( ( 3328 + 0x20000000 ) ) == 0 )
            {
                
                if ( var28 == 3 )
                {
                    var27 = 1;
                }

            }
            else if ( ( var28 == 3 ) && ( GET_COUNT( ( 356 + 0 ) ) >= 3 ) )
            {
                var27 = 1;
            }

        }
        else if ( BIT_CHK( ( 3328 + 0x20000000 ) ) == 0 )
        {
            
            if ( var28 == 6 )
            {
                
                if ( BIT_CHK( ( 3494 + 0x20000000 ) ) == 0 )
                {
                    var27 = 1;
                }

            }
            else 
            {
                var27 = 1;
            }

        }
        else if ( GET_COUNT( ( 356 + 0 ) ) >= 3 )
        {
            var27 = 1;
        }

    }

    var31 = 1;
    _193:
    
    if ( var31 < 127 )
    {
        var30 = GET_REQUEST_STATUS( var31 );
        
        if ( var30 == 4 )
        {
            var27 = 1;
            goto _194;
        }

        var31 = ( var31 + 1 );
        goto _193;
    }

    _194:
    
    if ( ( BIT_CHK( ( 3098 + 0x20000000 ) ) == 1 ) && ( BIT_CHK( ( 3099 + 0x20000000 ) ) == 0 ) )
    {
        var33 = 0;
        
        if ( GET_ITEM_NUM( ( 0x4000 + 42 ) ) > 0 )
        {
            var33 = ( var33 + 1 );
        }

        
        if ( GET_ITEM_NUM( ( 0x4000 + 43 ) ) > 0 )
        {
            var33 = ( var33 + 1 );
        }

        
        if ( GET_ITEM_NUM( ( 0x4000 + 44 ) ) > 0 )
        {
            var33 = ( var33 + 1 );
        }

        
        if ( GET_ITEM_NUM( ( 0x4000 + 45 ) ) > 0 )
        {
            var33 = ( var33 + 1 );
        }

        
        if ( GET_ITEM_NUM( ( 0x4000 + 46 ) ) > 0 )
        {
            var33 = ( var33 + 1 );
        }

        
        if ( GET_ITEM_NUM( ( 0x4000 + 47 ) ) > 0 )
        {
            var33 = ( var33 + 1 );
        }

        
        if ( GET_ITEM_NUM( ( 0x4000 + 48 ) ) > 0 )
        {
            var33 = ( var33 + 1 );
        }

        
        if ( GET_ITEM_NUM( ( 0x4000 + 49 ) ) > 0 )
        {
            var33 = ( var33 + 1 );
        }

        
        if ( GET_ITEM_NUM( ( 0x4000 + 50 ) ) > 0 )
        {
            var33 = ( var33 + 1 );
        }

        
        if ( GET_ITEM_NUM( ( 0x4000 + 51 ) ) > 0 )
        {
            var33 = ( var33 + 1 );
        }

        
        if ( GET_ITEM_NUM( ( 0x4000 + 52 ) ) > 0 )
        {
            var33 = ( var33 + 1 );
        }

        
        if ( GET_ITEM_NUM( ( 0x4000 + 53 ) ) > 0 )
        {
            var33 = ( var33 + 1 );
        }

        
        if ( GET_ITEM_NUM( ( 0x4000 + 309 ) ) > 0 )
        {
            var33 = ( var33 + 1 );
        }

        
        if ( GET_ITEM_NUM( ( 0x4000 + 310 ) ) > 0 )
        {
            var33 = ( var33 + 1 );
        }

        
        if ( GET_ITEM_NUM( ( 0x4000 + 311 ) ) > 0 )
        {
            var33 = ( var33 + 1 );
        }

        
        if ( var33 >= 12 )
        {
            var27 = 1;
        }

    }

    
    if ( ( BIT_CHK( ( 3120 + 0x20000000 ) ) == 1 ) && ( BIT_CHK( ( 3121 + 0x20000000 ) ) == 0 ) )
    {
        var31 = 0;
        _231:
        
        if ( var31 < 11 )
        {
            var32 = GET_ITEM_NUM( ( ( 0x4000 + 144 ) + var31 ) );
            
            if ( var32 > 0 )
            {
                var27 = 1;
            }

            var31 = ( var31 + 1 );
            goto _231;
        }

    }

    
    if ( ( BIT_CHK( ( 3122 + 0x20000000 ) ) == 1 ) && ( BIT_CHK( ( 3123 + 0x20000000 ) ) == 0 ) )
    {
        var31 = 0;
        _237:
        
        if ( var31 < 5 )
        {
            var32 = GET_ITEM_NUM( ( ( 0x4000 + 193 ) + var31 ) );
            
            if ( var32 > 0 )
            {
                var27 = 1;
            }

            var31 = ( var31 + 1 );
            goto _237;
        }

    }

    
    if ( ( BIT_CHK( ( 3333 + 0x20000000 ) ) == 1 ) && ( BIT_CHK( ( 3483 + 0x20000000 ) ) == 1 ) )
    {
        
        if ( BIT_CHK( ( 3328 + 0x20000000 ) ) == 0 )
        {
            
            if ( ( var28 == 3 ) || ( var28 == 4 ) )
            {
                var27 = 1;
            }

        }
        else if ( BIT_CHK( ( 3329 + 0x20000000 ) ) == 0 )
        {
            
            if ( ( var28 == 3 ) || ( var28 == 4 ) )
            {
                var27 = 1;
            }

        }
        else if ( BIT_CHK( ( 3330 + 0x20000000 ) ) == 0 )
        {
            
            if ( ( var28 == 3 ) || ( var28 == 4 ) )
            {
                var27 = 1;
            }

        }
        else if ( BIT_CHK( ( 3331 + 0x20000000 ) ) == 0 )
        {
            
            if ( var28 == 4 )
            {
                var27 = 1;
            }

        }
        else if ( BIT_CHK( ( 3332 + 0x20000000 ) ) == 0 )
        {
            
            if ( ( var28 == 3 ) || ( var28 == 4 ) )
            {
                var27 = 1;
            }

        }

    }

    
    if ( var27 > 0 )
    {
        BIT_ON( ( 334 + 0x20000000 ) );
    }
    else 
    {
        BIT_OFF( ( 334 + 0x20000000 ) );
    }

    FLD_NPC_FLAG_OFF( ( 66 + 0 ) );
}

